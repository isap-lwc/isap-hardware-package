A. Hardware description language used

    VHDL

B. Type of implementation

    Lightweight

C. Use of hardware description language source files provided as a part of the 
LWC Development Package
    
    File name                       | Used  | Release number 	| Functional modifications 
                                    | (Y/N) |                	| (Y/N)                    
    =========================================================================
    data_piso.vhd                   | Y     | 1.2.0             |  N 
    data_sipo.vhd                   | Y     | 1.2.0             |  N 
    fwft_fifo.vhd                   | Y     | 1.2.0             |  N 
    key_piso.vhd                    | Y     | 1.2.0             |  N 
    LWC_TB.vhd                      | Y     | 1.2.0             |  N 
    LWC.vhd                         | Y     | 1.2.0             |  N 
    NIST_LWAPI_pkg.vhd              | Y     | 1.2.0             |  N 
    PreProcessor.vhd                | Y     | 1.2.0             |  N 
    PostProcessor.vhd               | Y     | 1.2.0             |  Y *
    design_pkg.vhd                  | Y     | 1.2.0             |  N 
    std_logic_1164_additions.vhd    | Y     | 1.2.0             |  N 

    * During decryption ISAP performs tag verification on C/AD before the plaintext is generated. We modified the implementation of `PostProcessor.vhd` such that it acknowledges and saves the tag verification result while it is otherwise stuck waiting for the plaintext in `S_OUT_MSG`. After successful tag verification and the reception of the plaintext the PostProcessor then jumps directly to `S_STATUS` instead of `S_VERIFY_TAG`. These changes only affect 5 lines of code of `PostProcessor.vhd` and are highlighted with `isap begin` and `isap end` comments.
    
D. Supported types and order of segment types

    a. input to encryption          npub, ad, pt *
    b. output from encryption       ct, tag
    c. input to decryption          npub, ad, ct, tag *
    d. output from decryption       pt
    e. input to hash                data
    f. output from hash             message digest
    
    * To our best knowledge, this combination of input/output message format is currently not supported by cryptotvgen. We hence use crypotvgen with message format `npub data ad tag` and then use a custom python script to convert the resulting testvectors according to our needs. See, e.g., `software/cryptotvgen/examples/genkat_v1.py` as an example.

E. Deviations from the LWC API v1.2.0 2-Pass specification
    
    Minimum compliance criteria        N/A
    Interface                          N/A
    Communication Protocol             N/A
    Timing Characteristics             N/A

